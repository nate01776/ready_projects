<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d2b0110d-0a13-44a5-8cc0-45d2ad9884ef" created="2.7.0" activeEnvironment="Default environment" name="Example Project" resourceRoot="" updated="2.7.0 2019-05-30T13:25:24Z" encryptionMode="Not encrypted" abortOnError="false" runType="SEQUENTIAL" soapui-version="5.5.0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="80183b82-b050-4b7b-a2cb-930bd0036cb4" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://dog.ceo" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>http://localhost:8088/</con:endpoint>
      <con:endpoint>https://dog.ceo/api</con:endpoint>
    </con:endpoints>
    <con:resource name="all_breeds" path="/breeds" id="35557b02-eb33-4e30-a24a-7b57e2063f6b">
      <con:settings/>
      <con:parameters/>
      <con:resource name="all" path="list/all" id="50467bb8-8a02-49f6-8abf-bea00916809d">
        <con:settings/>
        <con:parameters/>
        <con:method name="GET" id="519636f9-1635-4b1d-ac21-43b25094fe8c" method="GET">
          <con:settings/>
          <con:parameters/>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:all="https://dog.ceo/api/breeds/list/all">all:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType xsi:nil="true"/>
            <con:status>404</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType xsi:nil="true"/>
            <con:status>0</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:request name="Request 1" id="abda0eae-c63f-4bc2-a048-16248a20ea77" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://dog.ceo/api</con:endpoint>
            <con:request/>
            <con:originalUri>https://dog.ceo/api/breeds/list/all</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:request>
        </con:method>
      </con:resource>
      <con:resource name="random" path="image/random" id="6f888ca8-b5e2-44ee-8334-581c92cd3731">
        <con:settings/>
        <con:parameters/>
        <con:method name="GET" id="dbedaa41-d041-4773-a8d3-3827e7cdb146" method="GET">
          <con:settings/>
          <con:parameters/>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:ran="https://dog.ceo/api/breeds/image/random">ran:Response</con:element>
          </con:representation>
          <con:request name="Request 1" id="690b0584-560d-477b-973b-3f5d2309667a" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://dog.ceo/api</con:endpoint>
            <con:request/>
            <con:originalUri>https://dog.ceo/api/breeds/image/random</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:environmentSpec>
              <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="single_breed" path="/breed/{breed_name}" id="9d03782f-0158-4308-9e20-8041bdfb2e7e">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>breed_name</con:name>
          <con:style>TEMPLATE</con:style>
        </con:parameter>
      </con:parameters>
      <con:resource name="all_images" path="/images" id="96032696-7852-45b4-b4aa-3af4b727e712">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>breed_name</con:name>
            <con:value>breed_name</con:value>
            <con:style>TEMPLATE</con:style>
            <con:default>breed_name</con:default>
          </con:parameter>
        </con:parameters>
        <con:method name="GET" id="5c34e76e-652c-4e4a-bf7d-a7e05b7b0cf7" method="GET">
          <con:settings/>
          <con:parameters/>
          <con:representation type="FAULT">
            <con:mediaType>text/html; charset=UTF-8</con:mediaType>
            <con:status>404</con:status>
            <con:params/>
            <con:element>html</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:imag="https://dog.ceo/api/breeds/hound/images">imag:Response</con:element>
          </con:representation>
          <con:request name="Request 1" id="bd312800-d7be-48c1-85cc-fcdb9bd88a1d" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://dog.ceo/api</con:endpoint>
            <con:request/>
            <con:originalUri>https://dog.ceo/api/breeds/hound/images</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="breed_name" value="hound" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:request>
        </con:method>
      </con:resource>
      <con:resource name="random_image" path="/images/random" id="eae9a760-f17c-4ccd-b0b2-45a162f55ab1">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>breed_name</con:name>
            <con:value>breed_name</con:value>
            <con:style>TEMPLATE</con:style>
            <con:default>breed_name</con:default>
          </con:parameter>
        </con:parameters>
        <con:resource name="multiple" path="{image_count}" id="27cb785b-1a1c-4769-8233-344ba4101103">
          <con:settings/>
          <con:parameters/>
          <con:method name="GET" id="97f264f5-c865-40fb-978c-cb63ae52fc30" method="GET">
            <con:settings/>
            <con:parameters>
              <con:parameter required="true">
                <con:name>image_count</con:name>
                <con:value/>
                <con:style>TEMPLATE</con:style>
                <con:default/>
              </con:parameter>
            </con:parameters>
            <con:representation type="RESPONSE">
              <con:mediaType>text/html; charset=UTF-8</con:mediaType>
              <con:status>200</con:status>
              <con:params/>
              <con:element>html</con:element>
            </con:representation>
            <con:representation type="RESPONSE">
              <con:mediaType>application/json</con:mediaType>
              <con:status>200</con:status>
              <con:params/>
              <con:element xmlns:dog="https://dog.ceo/dog-api/">dog:Response</con:element>
            </con:representation>
            <con:representation type="RESPONSE">
              <con:mediaType>text/html;charset=utf-8</con:mediaType>
              <con:status>200</con:status>
              <con:params/>
            </con:representation>
            <con:representation type="FAULT">
              <con:mediaType>application/json</con:mediaType>
              <con:status>404</con:status>
              <con:params/>
              <con:element xmlns:dog="https://dog.ceo/dog-api/">dog:Fault</con:element>
            </con:representation>
            <con:request name="Request 1" id="aa63e926-ef61-4be9-af21-39a20f400b28" mediaType="application/json">
              <con:settings>
                <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              </con:settings>
              <con:endpoint>https://dog.ceo/api</con:endpoint>
              <con:request/>
              <con:originalUri>https://dog.ceo/dog-api/</con:originalUri>
              <con:credentials>
                <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
                <con:authType>No Authorization</con:authType>
              </con:credentials>
              <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
              <con:parameters>
                <con:entry key="breed_name" value="hound"/>
                <con:entry key="image_count" value="3"/>
              </con:parameters>
              <con:parameterOrder>
                <con:entry>breed_name</con:entry>
                <con:entry>image_count</con:entry>
              </con:parameterOrder>
              <con:environmentSpec>
                <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                  <con:authProfile>No Authorization</con:authProfile>
                </con:entry>
              </con:environmentSpec>
            </con:request>
          </con:method>
        </con:resource>
        <con:method name="GET" id="8d6834f4-100b-42a3-8244-03f225ac7b7f" method="GET">
          <con:settings/>
          <con:parameters>
            <con:parameter required="true">
              <con:name>Auth_token</con:name>
              <con:value/>
              <con:style>HEADER</con:style>
              <con:default/>
            </con:parameter>
          </con:parameters>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:ran="https://dog.ceo/api/breed/hound/images/random">ran:Response</con:element>
          </con:representation>
          <con:request name="Request 1" id="dcaba075-d0b1-43bd-b5e2-0f954c75c7c8" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://dog.ceo/api</con:endpoint>
            <con:request/>
            <con:originalUri>https://dog.ceo/api/breed/hound/images/random</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="breed_name" value="hound"/>
              <con:entry key="Auth_token" value="12309192"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>breed_name</con:entry>
              <con:entry>Auth_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:request>
        </con:method>
      </con:resource>
      <con:resource name="list_subreeds" path="/list" id="57b77edd-bbf8-43cc-a208-482431a043c1">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>breed_name</con:name>
            <con:value>breed_name</con:value>
            <con:style>TEMPLATE</con:style>
            <con:default>breed_name</con:default>
          </con:parameter>
        </con:parameters>
        <con:method name="GET" id="cb8b8f7a-f860-4a19-8da1-ed4f55dabf31" method="GET">
          <con:settings/>
          <con:parameters/>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:list="https://dog.ceo/api/breed/hound/list">list:Response</con:element>
          </con:representation>
          <con:request name="Request 1" id="9d34e320-3607-4009-a2d5-404f8d3b356c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://dog.ceo/api</con:endpoint>
            <con:request/>
            <con:originalUri>https://dog.ceo/api/breed/hound/list</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="breed_name" value="hound" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:environmentSpec>
              <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:request>
        </con:method>
      </con:resource>
      <con:resource name="{sub_breed}" path="{sub_breed}" id="b48accab-3f63-47f9-9c3d-e157c037af9a">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>sub_breed</con:name>
            <con:value>sub_breed</con:value>
            <con:style>TEMPLATE</con:style>
            <con:default>sub_breed</con:default>
          </con:parameter>
        </con:parameters>
        <con:resource name="images" path="images" id="10cc6858-b20a-4adc-8c54-a53d14d27f93">
          <con:settings/>
          <con:parameters/>
          <con:resource name="random" path="random" id="564b2e55-10cf-44b5-8557-861ae8a4d824">
            <con:settings/>
            <con:parameters/>
            <con:resource name="{image_count}" path="{image_count}" id="c605378d-932e-44a0-88fb-578629488e7f">
              <con:settings/>
              <con:parameters>
                <con:parameter required="true">
                  <con:name>image_count</con:name>
                  <con:value>image_count</con:value>
                  <con:style>TEMPLATE</con:style>
                  <con:default>image_count</con:default>
                </con:parameter>
              </con:parameters>
              <con:method name="GET" id="5a1ba866-ce34-46b5-8710-65b261ffa733" method="GET">
                <con:settings/>
                <con:parameters/>
                <con:representation type="RESPONSE">
                  <con:mediaType>application/json</con:mediaType>
                  <con:status>200</con:status>
                  <con:params/>
                  <con:element xmlns:ns="https://dog.ceo/api/breed/hound/afghan/images/random/3">ns:Response</con:element>
                </con:representation>
                <con:request name="Request 1" id="2a7d0d61-ae1f-4818-911e-d7096566cd21" mediaType="application/json">
                  <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                  </con:settings>
                  <con:endpoint>https://dog.ceo/api</con:endpoint>
                  <con:request/>
                  <con:originalUri>https://dog.ceo/api/breed/hound/afghan/images/random/3</con:originalUri>
                  <con:credentials>
                    <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
                    <con:authType>No Authorization</con:authType>
                  </con:credentials>
                  <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                  <con:parameters>
                    <con:entry key="breed_name" value="hound"/>
                    <con:entry key="sub_breed" value="afghan"/>
                    <con:entry key="image_count" value="3"/>
                  </con:parameters>
                  <con:environmentSpec>
                    <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                      <con:authProfile>No Authorization</con:authProfile>
                    </con:entry>
                  </con:environmentSpec>
                </con:request>
              </con:method>
            </con:resource>
            <con:method name="GET" id="37ddd65d-1af1-44c1-869e-a74e8a9c4d27" method="GET">
              <con:settings/>
              <con:parameters/>
              <con:representation type="RESPONSE">
                <con:mediaType>application/json</con:mediaType>
                <con:status>200</con:status>
                <con:params/>
                <con:element xmlns:ran="https://dog.ceo/api/breed/hound/afghan/images/random">ran:Response</con:element>
              </con:representation>
              <con:request name="Request 1" id="d5eb501b-fa99-407f-80fb-38bc8bb7591d" mediaType="application/json">
                <con:settings>
                  <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                </con:settings>
                <con:endpoint>https://dog.ceo/api</con:endpoint>
                <con:request/>
                <con:originalUri>https://dog.ceo/api/breed/hound/afghan/images/random</con:originalUri>
                <con:credentials>
                  <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
                  <con:authType>No Authorization</con:authType>
                </con:credentials>
                <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                <con:parameters>
                  <con:entry key="breed_name" value="hound"/>
                  <con:entry key="sub_breed" value="afghan"/>
                </con:parameters>
                <con:environmentSpec>
                  <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                    <con:authProfile>No Authorization</con:authProfile>
                  </con:entry>
                </con:environmentSpec>
              </con:request>
            </con:method>
          </con:resource>
          <con:method name="GET" id="026d4381-28bc-4a80-a1b6-7d7bcffca2a1" method="GET">
            <con:settings/>
            <con:parameters/>
            <con:representation type="FAULT">
              <con:mediaType>application/json</con:mediaType>
              <con:status>404</con:status>
              <con:params/>
              <con:element xmlns:imag="https://dog.ceo/api/breed/hound/afgan/images">imag:Fault</con:element>
            </con:representation>
            <con:representation type="RESPONSE">
              <con:mediaType>application/json</con:mediaType>
              <con:status>200</con:status>
              <con:params/>
              <con:element xmlns:imag="https://dog.ceo/api/breed/hound/afgan/images">imag:Response</con:element>
            </con:representation>
            <con:request name="Request 1" id="3d15854e-04c0-451e-b716-2c652f254817" mediaType="application/json">
              <con:settings>
                <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              </con:settings>
              <con:endpoint>https://dog.ceo/api</con:endpoint>
              <con:request/>
              <con:originalUri>https://dog.ceo/api/breed/hound/afgan/images</con:originalUri>
              <con:credentials>
                <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
                <con:authType>No Authorization</con:authType>
              </con:credentials>
              <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
              <con:parameters>
                <con:entry key="breed_name" value="hound"/>
                <con:entry key="sub_breed" value="afghan"/>
              </con:parameters>
              <con:environmentSpec>
                <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                  <con:authProfile>No Authorization</con:authProfile>
                </con:entry>
              </con:environmentSpec>
            </con:request>
          </con:method>
        </con:resource>
      </con:resource>
      <con:environmentSpec>
        <con:entry environmentId="Default">
          <con:authProfile>SAMPLE_AUTH</con:authProfile>
        </con:entry>
      </con:environmentSpec>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" id="64807a0a-7cfb-426f-a7ea-0d07bee2065c" name="Darth Library" type="rest_ex" wadlVersion="https://swagger.io/swagger2/specification" definitionUrl="https://api.swaggerhub.com/apis/The_Empire/Darth_Library/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>The Death Stars internal library catalog</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="https://api.swaggerhub.com/apis/The_Empire/Darth_Library/1.0.0">
      <con:part>
        <con:url>https://api.swaggerhub.com/apis/The_Empire/Darth_Library/1.0.0</con:url>
        <con:content>{"swagger":"2.0","info":{"version":"1.0.0","title":"Darth Library","description":"The Death Stars internal library catalog"},"paths":{"/books":{"get":{"tags":["books"],"summary":"Retrives an array of book objects scoped to title or authorID.","description":"This resource is used to search our book database, and retrieve a set of objects related to your query. If there are no objects to return, the API will still return a 200 Status, but the \"results\" set will be an empty array and should be accounted for.","produces":["application/json"],"parameters":[{"in":"query","name":"title","description":"Title string to query. API will return both whole and partial matches dependent on the *fullMatch* parameter.","required":false,"type":"string"},{"in":"query","name":"fullMatch","description":"Boolean value of whether or not to return and exact match to the title query string.","required":false,"type":"boolean"},{"in":"query","name":"authorID","description":"ID of author to retrieve related books. Similar functionality can be found by querying */authors/{id}/books* if that level is desired.","required":false,"type":"integer"}],"responses":{"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"},"200":{"description":"Array of book objects is returned based on search criterias","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Books"}}}},"post":{"tags":["books"],"summary":"POSTs a book object to our DB.","description":"Returns object w/ID.","produces":["application/json"],"parameters":[{"in":"body","name":"author object","description":"author object","required":true,"schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Book_no_id"}}],"responses":{"201":{"description":"Book object that was created","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Book"}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}}},"/books/{id}":{"get":{"tags":["books/{id}"],"summary":"GETs a single book object.","description":"Returns single book object based on ID","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"book id","required":true,"type":"integer"}],"responses":{"200":{"description":"search results matching criteria","schema":{"type":"object","properties":{"status":{"type":"integer","description":"status code","example":200},"result":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Book"}}}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}},"delete":{"tags":["books/{id}"],"summary":"DELETEs book object","description":"Deletes a created book based by ID - does not support name. Returns deleted object.","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"Book ID to delete","required":true,"type":"string"}],"responses":{"200":{"description":"Book was successfully deleted","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Book"}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}},"patch":{"tags":["books/{id}"],"summary":"PATCHs book object","description":"Updates a created book based by ID - does not support name. Returns deleted object.","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"Book ID to update","required":true,"type":"string"}],"responses":{"200":{"description":"Book was successfully updated","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Book"}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}}},"/authors":{"get":{"tags":["authors"],"summary":"GETs array of author objects based on query","description":"Returns array based on author search params.","produces":["application/json"],"parameters":[{"in":"query","name":"first_name","description":"first name search parameter","required":false,"type":"string"},{"in":"query","name":"last_name","description":"last name search parameter","required":false,"type":"string"}],"responses":{"200":{"description":"Authors successfully retrived","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Authors"}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}},"post":{"tags":["authors"],"summary":"POSTs an author object to our DB","description":"Returns object w/ID.","produces":["application/json"],"parameters":[{"in":"body","name":"author object","description":"author object","required":true,"schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Author_no_id"}}],"responses":{"201":{"description":"Book object that was created","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Author"}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}}},"/authors/{id}":{"get":{"tags":["authors/{id}"],"summary":"GETS an author object","description":"Query for a specific author by ID.","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"book id","required":true,"type":"integer"}],"responses":{"200":{"description":"search results matching criteria","schema":{"type":"object","properties":{"status":{"type":"integer","description":"status code","example":200},"result":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Author"}}}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}},"delete":{"tags":["authors/{id}"],"summary":"DELETEs author object","description":"Deletes a created book based by ID - does not support name. Returns deleted object.","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"Book ID to delete","required":true,"type":"string"}],"responses":{"200":{"description":"Book was successfully deleted","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Author"}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}},"patch":{"tags":["authors/{id}"],"summary":"PATCHs author object","description":"Updates a created author based by ID - does not support name. Returns deleted object.","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"Book ID to update","required":true,"type":"string"}],"responses":{"200":{"description":"Author was successfully updated","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Author"}},"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"}}}},"/subjects":{"get":{"tags":["subjects"],"summary":"Retrives an array of book objects scoped to title or authorID.","description":"This resource is used to search our book database, and retrieve a set of objects related to your query. If there are no objects to return, the API will still return a 200 Status, but the \"results\" set will be an empty array and should be accounted for something else that is here.","produces":["application/json"],"parameters":[{"in":"query","name":"title","description":"Title string to query. API will return both whole and partial matches dependent on the *fullMatch* parameter.","required":false,"type":"string"},{"in":"query","name":"fullMatch","description":"Boolean value of whether or not to return and exact match to the title query string.","required":false,"type":"boolean"},{"in":"query","name":"authorID","description":"ID of author to retrieve related books. Similar functionality can be found by querying */authors/{id}/books* if that level is desired.","required":false,"type":"integer"}],"responses":{"404":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_404"},"500":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/responses/response_500"},"200":{"description":"Array of book objects is returned based on search criterias","schema":{"$ref":"https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0#/definitions/Books"}}}}}}}</con:content>
        <con:type>https://swagger.io/swagger2/specification</con:type>
      </con:part>
      <con:part>
        <con:url>https://api.swaggerhub.com/domains/The_Empire/Darth_Domain/1.0.0</con:url>
        <con:content>{"definitions":{"Order":{"type":"object","properties":{"id":{"type":"string","example":"152-88549"},"petId":{"type":"integer","example":198.0},"quantity":{"type":"integer","format":"int32","example":3},"shipDate":{"type":"string","example":"2018-11-08T18:26:19+00:00"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean","default":false}},"xml":{"name":"Order"}},"Ship":{"type":"object","required":["name","photoUrls"],"properties":{"id":{"type":"string","example":"152-88549"},"category":{"$ref":"#/definitions/Category"},"name":{"type":"string","example":"TIE starfighter"},"photoUrls":{"type":"array","xml":{"name":"photoUrl","wrapped":true},"items":{"type":"string"}},"tags":{"type":"array","xml":{"name":"tag","wrapped":true},"items":{"$ref":"#/definitions/Tag"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]}},"xml":{"name":"Pet"}},"User":{"type":"object","properties":{"id":{"type":"string","example":"X87-998"},"username":{"type":"string","example":"Vader4Senate"},"firstName":{"type":"string","example":"Darth"},"lastName":{"type":"string","example":"Vader"},"email":{"type":"string","example":"vader4senate@deathstar.emp"},"password":{"type":"string","example":"V4D3R"},"phone":{"type":"string","example":"800-446-9879"},"userStatus":{"type":"integer","format":"int32","description":"User Status","example":16}},"xml":{"name":"User"}},"Category":{"type":"object","properties":{"id":{"type":"string","example":"C147"},"name":{"type":"string","example":"starfighter"}},"xml":{"name":"Category"}},"Tag":{"type":"object","properties":{"id":{"type":"string","example":"T14"},"name":{"type":"string","example":"starfighter"}},"xml":{"name":"Tag"}},"Book":{"type":"object","required":["id","title","author","description","_link"],"properties":{"id":{"type":"integer","example":"66"},"title":{"type":"string","example":"The Tragedy of Darth Plagueis the Wise"},"description":{"type":"string","example":"Not a story the Jedi would tell you"},"author":{"$ref":"#/definitions/Author"},"_link":{"type":"string","example":"/books/66"}}},"Book_no_id":{"type":"object","required":["title","author","description"],"properties":{"title":{"type":"string","example":"The Tragedy of Darth Plagueis the Wise"},"description":{"type":"string","example":"Not a story the Jedi would tell you"},"author":{"$ref":"#/definitions/Author"}}},"Books":{"type":"object","required":["status","results"],"properties":{"status":{"type":"integer","example":200},"results":{"type":"array","items":{"type":"object"},"example":[{"id":"66","title":"The Tragedy of Darth Plagueis the Wise","author_id":254,"_link":"/books/66"},{"id":"67","title":"Lord Vader: A Story of Rebirth","author_id":387,"_link":"/books/67"},{"id":"68","title":"Constructing Your First Lightsaber - A Beginners Guide","author_id":89,"_link":"/books/68"},{"id":"69","title":"The Power of the Dark Side","author_id":387,"_link":"/books/69"}]}}},"Author":{"type":"object","required":["id","first_name","last_name","_link"],"properties":{"id":{"type":"integer","example":254},"first_name":{"type":"string","example":"Darth"},"last_name":{"type":"string","example":"Sidious"},"_link":{"type":"string","example":"/authors/254"}}},"Author_no_id":{"type":"object","required":["first_name","last_name"],"properties":{"first_name":{"type":"string","example":"Darth"},"last_name":{"type":"string","example":"Sidious"}}},"Authors":{"type":"object","required":["status","results"],"properties":{"status":{"type":"integer","example":200},"results":{"type":"array","items":{"type":"object"},"example":[{"id":"254","first_name":"Darth","last_name":"Sidious","_link":"/authors/254"},{"id":"255","first_name":"Wilhuff","last_name":"Tarkin","_link":"/authors/255"},{"id":"256","first_name":"Orson","last_name":"Krennic","_link":"/authors/256"}]}}}},"responses":{"response_200":{"description":"Success","schema":{"type":"object","properties":{"status":{"type":"integer","description":"status code","example":200},"message":{"type":"string","description":"status string","example":"Everything is proceeding as I have foreseen."}}}},"response_201":{"description":"Value Stored","schema":{"type":"object","properties":{"status":{"type":"integer","description":"status code","example":201},"message":{"type":"string","description":"status string","example":"Good, good - let the data flow through you."}}}},"response_404":{"description":"Not Found","schema":{"type":"object","properties":{"status":{"type":"integer","description":"status code","example":404},"message":{"type":"string","description":"status string","example":"This was not the request you're looking for."}}}},"response_500":{"description":"server error","schema":{"type":"object","properties":{"status":{"type":"integer","description":"status code","example":500},"message":{"type":"string","description":"status string","example":"There is a great disturbance in the server."}}}}},"parameters":{"Param_book_id":{"name":"Book ID","in":"query","description":"Reference for book object","type":"integer","required":true}}}</con:content>
        <con:type>https://swagger.io/swagger2/specification</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>https://api.swaggerhub.com</con:endpoint>
    </con:endpoints>
    <con:resource name="/books" path="/books" id="0df29d50-08a3-4c6f-8ca8-8c09a42255ce">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="463dd83a-89ab-45d2-89de-48df0729d00f" method="GET">
        <con:description>This resource is used to search our book database, and retrieve a set of objects related to your query. If there are no objects to return, the API will still return a 200 Status, but the "results" set will be an empty array and should be accounted for.
Retrives an array of book objects scoped to title or authorID.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>title</con:name>
            <con:style>QUERY</con:style>
            <con:description>Title string to query. API will return both whole and partial matches dependent on the *fullMatch* parameter.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>fullMatch</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>Boolean value of whether or not to return and exact match to the title query string.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>authorID</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>ID of author to retrieve related books. Similar functionality can be found by querying */authors/{id}/books* if that level is desired.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 200,
  "results" : [ {
    "id" : "66",
    "title" : "The Tragedy of Darth Plagueis the Wise",
    "author_id" : 254,
    "_link" : "/books/66"
  }, {
    "id" : "67",
    "title" : "Lord Vader: A Story of Rebirth",
    "author_id" : 387,
    "_link" : "/books/67"
  }, {
    "id" : "68",
    "title" : "Constructing Your First Lightsaber - A Beginners Guide",
    "author_id" : 89,
    "_link" : "/books/68"
  }, {
    "id" : "69",
    "title" : "The Power of the Dark Side",
    "author_id" : 387,
    "_link" : "/books/69"
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="a6995131-aa8e-4f99-bcbd-038871c839a8" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="POST" id="486ce5e2-07c6-40b3-b5ca-c52d5c14189e" method="POST">
        <con:description>Returns object w/ID.
POSTs a book object to our DB.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 66,
  "title" : "The Tragedy of Darth Plagueis the Wise",
  "description" : "Not a story the Jedi would tell you",
  "author" : {
    "id" : 254,
    "first_name" : "Darth",
    "last_name" : "Sidious",
    "_link" : "/authors/254"
  },
  "_link" : "/books/66"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="74238501-4a5d-4e02-b4b9-a50d1ad93db4" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/books/{id}" path="/books/{id}" id="f9f32b7c-2e07-4d5a-8505-161691b72ca6">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:dataType>string</con:dataType>
          <con:description>Book ID to update</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="e37b4afd-cbee-469d-b395-cf7898284159" method="GET">
        <con:description>Returns single book object based on ID
GETs a single book object.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 200,
  "result" : {
    "id" : 66,
    "title" : "The Tragedy of Darth Plagueis the Wise",
    "description" : "Not a story the Jedi would tell you",
    "author" : {
      "id" : 254,
      "first_name" : "Darth",
      "last_name" : "Sidious",
      "_link" : "/authors/254"
    },
    "_link" : "/books/66"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="25f020a0-c1e2-4e3d-91a1-3c07e99ff874" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="8c655739-f9af-434a-80f6-70dae4e143ae" method="DELETE">
        <con:description>Deletes a created book based by ID - does not support name. Returns deleted object.
DELETEs book object</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 66,
  "title" : "The Tragedy of Darth Plagueis the Wise",
  "description" : "Not a story the Jedi would tell you",
  "author" : {
    "id" : 254,
    "first_name" : "Darth",
    "last_name" : "Sidious",
    "_link" : "/authors/254"
  },
  "_link" : "/books/66"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="77692253-ba2d-41c4-8786-d31662303db9" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="c2529c94-7b89-4a30-95d5-bd3fc1cb80c4" method="PATCH">
        <con:description>Updates a created book based by ID - does not support name. Returns deleted object.
PATCHs book object</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 66,
  "title" : "The Tragedy of Darth Plagueis the Wise",
  "description" : "Not a story the Jedi would tell you",
  "author" : {
    "id" : 254,
    "first_name" : "Darth",
    "last_name" : "Sidious",
    "_link" : "/authors/254"
  },
  "_link" : "/books/66"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="d3cb6a41-1eae-4cfb-81f6-5064c6c189e6" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/authors" path="/authors" id="8c943efe-55ba-4ebe-9d5c-95a59935a5a1">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="c44faece-3878-4a9e-88c3-bdd48794db5b" method="GET">
        <con:description>Returns array based on author search params.
GETs array of author objects based on query</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>first_name</con:name>
            <con:style>QUERY</con:style>
            <con:description>first name search parameter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>last_name</con:name>
            <con:style>QUERY</con:style>
            <con:description>last name search parameter</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 200,
  "results" : [ {
    "id" : "254",
    "first_name" : "Darth",
    "last_name" : "Sidious",
    "_link" : "/authors/254"
  }, {
    "id" : "255",
    "first_name" : "Wilhuff",
    "last_name" : "Tarkin",
    "_link" : "/authors/255"
  }, {
    "id" : "256",
    "first_name" : "Orson",
    "last_name" : "Krennic",
    "_link" : "/authors/256"
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="451cdc44-7a77-4f69-a1ea-6928ee7e33a4" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="POST" id="2c643dee-98af-47f3-a9d9-f5fea182db22" method="POST">
        <con:description>Returns object w/ID.
POSTs an author object to our DB</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 254,
  "first_name" : "Darth",
  "last_name" : "Sidious",
  "_link" : "/authors/254"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="a8e37654-b03b-42a0-b3d8-ac5eaee5050d" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/authors/{id}" path="/authors/{id}" id="a6da1ec1-3b24-422d-9f86-67d1fd4f8077">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>id</con:name>
          <con:style>TEMPLATE</con:style>
          <con:dataType>string</con:dataType>
          <con:description>Book ID to update</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="GET" id="c7e1769f-8bcf-496c-ba58-8f7efb01c4fe" method="GET">
        <con:description>Query for a specific author by ID.
GETS an author object</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 200,
  "result" : {
    "id" : 254,
    "first_name" : "Darth",
    "last_name" : "Sidious",
    "_link" : "/authors/254"
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="109ef28c-2ef0-4a6e-a2e5-f2c129b15004" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="c8cc3604-1355-4f2e-a4d3-a65fd82af1c0" method="DELETE">
        <con:description>Deletes a created book based by ID - does not support name. Returns deleted object.
DELETEs author object</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 254,
  "first_name" : "Darth",
  "last_name" : "Sidious",
  "_link" : "/authors/254"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="c7ddbe31-9e09-4870-8ba9-9137fedfce70" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="11f7c9e1-2023-47fa-8d5c-b368b0134ebe" method="PATCH">
        <con:description>Updates a created author based by ID - does not support name. Returns deleted object.
PATCHs author object</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 254,
  "first_name" : "Darth",
  "last_name" : "Sidious",
  "_link" : "/authors/254"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="5857ad55-98ff-4b3a-ab25-371083535998" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/subjects" path="/subjects" id="6db82b04-c8c4-4b8e-a4e0-3fb9ce0ebbbf">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="32e31c3a-38ba-4513-b1b6-7ab79889cf4e" method="GET">
        <con:description>This resource is used to search our book database, and retrieve a set of objects related to your query. If there are no objects to return, the API will still return a 200 Status, but the "results" set will be an empty array and should be accounted for something else that is here.
Retrives an array of book objects scoped to title or authorID.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>title</con:name>
            <con:style>QUERY</con:style>
            <con:description>Title string to query. API will return both whole and partial matches dependent on the *fullMatch* parameter.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>fullMatch</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>boolean</con:dataType>
            <con:description>Boolean value of whether or not to return and exact match to the title query string.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>authorID</con:name>
            <con:style>QUERY</con:style>
            <con:dataType>integer</con:dataType>
            <con:description>ID of author to retrieve related books. Similar functionality can be found by querying */authors/{id}/books* if that level is desired.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 200,
  "results" : [ {
    "id" : "66",
    "title" : "The Tragedy of Darth Plagueis the Wise",
    "author_id" : 254,
    "_link" : "/books/66"
  }, {
    "id" : "67",
    "title" : "Lord Vader: A Story of Rebirth",
    "author_id" : 387,
    "_link" : "/books/67"
  }, {
    "id" : "68",
    "title" : "Constructing Your First Lightsaber - A Beginners Guide",
    "author_id" : 89,
    "_link" : "/books/68"
  }, {
    "id" : "69",
    "title" : "The Power of the Dark Side",
    "author_id" : 387,
    "_link" : "/books/69"
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 404,
  "message" : "This was not the request you're looking for."
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:sampleContent>{
  "status" : 500,
  "message" : "There is a great disturbance in the server."
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="7423fdd8-1393-4c6f-87a7-7fd99eeedc91" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" id="469a4b05-11ca-4116-a016-333d23f53459" name="ReadyAPI TestEngine API" type="rest_ex" wadlVersion="https://swagger.io/openapiv3/specification" definitionUrl="https://api.swaggerhub.com/apis/smartbear/readyapi-testengine/0.5.5/swagger.json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>A REST based API testing framework; submit Ready API/SoapUI projects using your favorite HTTP client, one of the existing open-source clients/tools on GitHub to run API tests either asynchronously or synchronously: - Generate your own client from this specification: https://app.swaggerhub.com/apis/smartbear/ready-api-testengine - Use our Jenkins plugin: http://dl.eviware.com/testengine/readyapi-testengine-jenkins-plugin.hpi</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="https://api.swaggerhub.com/apis/smartbear/readyapi-testengine/0.5.5/swagger.json">
      <con:part>
        <con:url>https://api.swaggerhub.com/apis/smartbear/readyapi-testengine/0.5.5/swagger.json</con:url>
        <con:content><![CDATA[{"openapi":"3.0.2","info":{"version":"0.5.5","title":"ReadyAPI TestEngine API","description":"A REST based API testing framework; submit Ready API/SoapUI projects using your favorite HTTP client, one of the existing open-source clients/tools on GitHub to run API tests either asynchronously or synchronously: - Generate your own client from this specification: https://app.swaggerhub.com/apis/smartbear/ready-api-testengine - Use our Jenkins plugin: http://dl.eviware.com/testengine/readyapi-testengine-jenkins-plugin.hpi","contact":{"name":"SmartBear Software","url":"http://smartbear.com/","email":"sales@smartbear.com"},"license":{"name":"SmartBear Terms of Use","url":"https://smartbear.com/terms-of-use/"}},"paths":{"/testjobs":{"get":{"tags":["testjob"],"summary":"Returns test run results stored in TestEngine.","description":"Use this operation to get results of the latest test runs stored in TestEngine.","operationId":"getTestjobs","parameters":[{"name":"fetch","in":"query","required":false,"description":"Number of testjobs to return. Use `ALL´ to get all testjobs.","schema":{"anyOf":[{"type":"string","enum":["ALL"]},{"type":"integer"}]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","description":"The array of executed test jobs.","items":{"$ref":"#/components/schemas/TestJobSummary"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]},"post":{"tags":["testjob"],"summary":"Executes a ReadyAPI project.","description":"Use this operation to send a ReadyAPI test project to TestEngine. You command TestEngine to execute the entire project, or an individual test suite or test case in it. The body of the request should be a ReadyAPI project file. Either send the .xml file as is, or zip it. A zip is needed to send in a composite project or when sending in a project with file dependencies.","operationId":"postProjectTestjob","parameters":[{"$ref":"#/components/parameters/testSuiteParam"},{"$ref":"#/components/parameters/testCaseParam"},{"$ref":"#/components/parameters/environmentParam"},{"$ref":"#/components/parameters/asyncParam"},{"$ref":"#/components/parameters/callbackParam"},{"$ref":"#/components/parameters/clientCertParam"},{"$ref":"#/components/parameters/clientCertPasswordParam"},{"$ref":"#/components/parameters/projectPasswordParam"},{"$ref":"#/components/parameters/hostAndPortParam"},{"$ref":"#/components/parameters/tagsParam"},{"$ref":"#/components/parameters/proxyHostParam"},{"$ref":"#/components/parameters/proxyPortParam"},{"$ref":"#/components/parameters/proxyUsernameParam"},{"$ref":"#/components/parameters/proxyPasswordParam"}],"requestBody":{"description":"ReadyAPI project and dependencies if needed.","required":true,"content":{"application/zip":{"schema":{"type":"string","format":"binary"}},"application/xml":{"schema":{"type":"string","format":"binary"}},"multipart/form-data":{"schema":{"type":"object","properties":{"zip":{"type":"string","format":"binary"},"project":{"type":"string","format":"binary"}},"additionalProperties":{"type":"string","format":"binary"}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestJobReport"}},"application/junit+xml":{"schema":{"type":"string"}}}},"412":{"description":"Request contains unresolved files needed to execute the test job. It can be data sources, attachment or client certificates mentioned in test job but not provided in the request. Resend the request with all mentioned files.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UnresolvedFile"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]},"delete":{"tags":["admin"],"summary":"Deletes testjobs","description":"Delete jobs older than the specified date. If a date is not provided, test jobs older than a default number of days will be deleted. The default can be changed by changing `numberOfDaysToKeep` in the configuration file.","operationId":"deleteTestJobs","parameters":[{"name":"before","in":"query","required":false,"description":"Testjobs older than this date/time will be deleted.","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"description":"Test jobs were successfully deleted","content":{"application/json":{"schema":{"type":"integer","description":"number of deleted jobs"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/testjobs/{testjobId}":{"delete":{"tags":["testjob"],"summary":"Cancels the specified testjob","description":"Use this operation to stop the run specified by <i>testjobId</i>. You can find the testjobId in the response to your testjob request, or you can send a GET <code>/testjobs</code> request to the TestEngine.","operationId":"cancelTestjob","parameters":[{"$ref":"#/components/parameters/testjobIdParam"}],"responses":{"200":{"description":"Testjob canceled"},"404":{"description":"The specified test run was not found"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/testjobs/{testjobId}/report":{"get":{"tags":["testjob"],"summary":"Returns the status and result of the specified testjob.","description":"Use this operation to get information on the testjob specified by <i>testjobId</i>.  You can find in the response to your testjob request , or you can send a GET <code>/testjobs</code> request to TestEngine.","operationId":"getTestjobReport","parameters":[{"$ref":"#/components/parameters/testjobIdParam"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestJobReport"}},"application/junit+xml":{"schema":{"type":"string"}},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"schema":{"type":"string","format":"binary"}}}},"404":{"description":"The specified test job was not found"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/testjobs/{testjobId}/transactions":{"get":{"tags":["testjob"],"summary":"Returns the transaction logs for the specified test job.","description":"Use this operation to get transaction logs (individual request and response of executed test steps) of the test job specified by <i>test jobID</i>.  You can find it in the response of your test job request , or you can send a GET <code>/testjobs/{testjobId}/logs</code> request to TestEngine.","operationId":"getTransactions","parameters":[{"$ref":"#/components/parameters/testjobIdParam"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HarLogRoot"}}}},"404":{"description":"The specified test job was not found"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/testjobs/{testjobId}/transactions/{transactionId}":{"get":{"tags":["testjob"],"summary":"Gets message exchange for a test step test job transaction","description":"A particular test job of a test step is referred as transaction. Use this operation to get the request and response for a transaction in HAR format.","operationId":"getTransaction","parameters":[{"$ref":"#/components/parameters/testjobIdParam"},{"name":"transactionId","description":"The id of the transaction (test step test job) to get the message exchange (request and response) for.","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HarLogRoot"}}}},"404":{"description":"The specified test job or transaction was not found"},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/testjobs/stats/current":{"get":{"tags":["stats"],"description":"TestEngine statistics","summary":"Returns the number of currently running and queued jobs","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UsageStatistics"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/testjobs/stats/peak":{"get":{"tags":["stats"],"description":"TestEngine peak statistics","summary":"Returns peak usage statistics grouped per hour","parameters":[{"in":"query","name":"from","description":"The timestamp to return statistics from","schema":{"type":"string","format":"date-time"}},{"in":"query","name":"to","description":"The timestamp to return statistics to","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PeakUsageStatistics"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/testjobs/stats/count":{"get":{"tags":["stats"],"description":"TestEngine run statistics","summary":"Returns running and queued counts per hour","parameters":[{"in":"query","name":"from","description":"The timestamp to return statistics from, default will be 24 hours","schema":{"type":"string","format":"date-time"}},{"in":"query","name":"to","description":"The timestamp to return statistics to","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/JobCountStatistics"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/testjobs/stats/wait":{"get":{"tags":["stats"],"description":"TestEngine run statistics","summary":"Returns maximum and average wait times for a selected period","parameters":[{"in":"query","name":"from","description":"The timestamp to return statistics from, default will be 24 hours","schema":{"type":"string","format":"date-time"}},{"in":"query","name":"to","description":"The timestamp to return statistics to","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/JobWaitStatistics"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/users":{"get":{"tags":["user"],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"description":"Array of active users","type":"array","items":{"$ref":"#/components/schemas/User"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]},"post":{"tags":["user"],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}],"requestBody":{"$ref":"#/components/requestBodies/User"}}},"/users/{username}":{"get":{"tags":["user"],"parameters":[{"name":"username","in":"path","description":"The username to request information for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"403":{"description":"The authenticated user does not have access to the requested user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"404":{"description":"The user does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]},"put":{"tags":["user"],"parameters":[{"in":"path","name":"username","description":"The username to update information for","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/User"},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"403":{"description":"The authenticated user does not have access to the requested user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"404":{"description":"The user does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]},"delete":{"tags":["user"],"parameters":[{"in":"path","name":"username","description":"The username to request information for","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"User deleted successfully"},"403":{"description":"The authenticated user does not have access to the requested user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"404":{"description":"user not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/token":{"get":{"description":"This will provide us a JWT token with a short validity, and can be used to connect to WebSocket","tags":["user"],"responses":{"200":{"description":"OK","content":{"text/plain":{"schema":{"type":"string"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/auditlog":{"get":{"tags":["admin"],"parameters":[{"name":"userName","in":"query","required":false,"description":"The username to request information for","schema":{"type":"string"}},{"name":"from","in":"query","required":false,"description":"start date and time, example: 2017-07-21T17:32:28Z","schema":{"type":"string","format":"date-time"}},{"name":"to","in":"query","required":false,"description":"end date and time, example: 2017-07-21T17:32:28Z","schema":{"type":"string","format":"date-time"}},{"name":"sortOrder","in":"query","required":false,"description":"Optional parameter for sorting the list on the time.","schema":{"type":"string","enum":["DESC","ASC"],"default":"DESC"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AuditEvent"}}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}},"security":[{"basicAuth":[]}]}},"/analytics":{"get":{"tags":["misc"],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnalyticsProviderDetails"}}}},"404":{"description":"Analytics disabled","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}}}},"/license":{"get":{"tags":["admin"],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LicenseDetails"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}}},"post":{"tags":["admin"],"security":[{"basicAuth":[]}],"requestBody":{"description":"License file (.zip or .key) and activation info.","required":true,"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary"},"activationInfo":{"$ref":"#/components/schemas/LicenseActivationInfo"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LicenseDetails"}}}},"400":{"description":"Unable to install or activate license","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}}},"delete":{"tags":["admin"],"security":[{"basicAuth":[]}],"summary":"This will deactivate the license.","responses":{"200":{"description":"OK, Successfully deactivated"},"default":{"$ref":"#/components/responses/ErrorResponse"}}}},"/settings":{"get":{"tags":["admin"],"security":[{"basicAuth":[]}],"summary":"Retrieve current settings from the server","operationId":"getServerSettings","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerSettings"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}}},"put":{"tags":["admin"],"security":[{"basicAuth":[]}],"summary":"Update the settings on the server","operationId":"updateServerSettings","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerSettings"}}}},"responses":{"200":{"description":"Settings successfully updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerSettings"}}}},"default":{"$ref":"#/components/responses/ErrorResponse"}}}}},"components":{"requestBodies":{"User":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"securitySchemes":{"basicAuth":{"type":"http","description":"ReadyAPI TestEngine uses Basic authentication. Send in the authentication information preemptively.","scheme":"basic"}},"parameters":{"testCaseParam":{"name":"testCaseName","description":"The name of the test case to run.","in":"query","required":false,"schema":{"type":"string"}},"testSuiteParam":{"name":"testSuiteName","description":"The name of the test suite to run.","in":"query","required":false,"schema":{"type":"string"}},"environmentParam":{"name":"environment","description":"The target environment for test job.","in":"query","required":false,"schema":{"type":"string"}},"asyncParam":{"name":"async","description":"Specifies when TestEngine replies:<br/>`true` - Immediately.<br/>`false` - After the test job is over.","in":"query","required":false,"schema":{"type":"boolean","default":true}},"callbackParam":{"name":"callback","description":"The URL, to which the results will be posted.","in":"query","required":false,"schema":{"type":"string"}},"clientCertParam":{"name":"clientCertFileName","description":"The name of the separately provided client certificate file.","in":"query","required":false,"schema":{"type":"string"}},"clientCertPasswordParam":{"name":"clientCertPassword","description":"The password for the separately provided client certificate file.","in":"query","required":false,"schema":{"type":"string"}},"projectPasswordParam":{"name":"projectPassword","description":"The password used to decrypt an encrypted project file.","in":"query","required":false,"schema":{"type":"string"}},"hostAndPortParam":{"name":"hostAndPort","description":"The endpoint to be used for HTTP requests sent by this test, in the format host:[port].","in":"query","required":false,"schema":{"type":"string"}},"tagsParam":{"name":"tags","description":"A comma-separated list of tags identifying the test cases to be run when executing the test","in":"query","required":false,"schema":{"type":"string"}},"proxyHostParam":{"name":"proxyHost","description":"the HTTP proxy host","in":"query","required":false,"schema":{"type":"string"}},"proxyPortParam":{"name":"proxyPort","description":"the proxy port","in":"query","required":false,"schema":{"type":"string"}},"proxyUsernameParam":{"name":"proxyUsername","description":"the proxy username","in":"query","required":false,"schema":{"type":"string"}},"proxyPasswordParam":{"name":"proxyPassword","description":"the proxy password","in":"query","required":false,"schema":{"type":"string"}},"testjobIdParam":{"name":"testjobId","description":"The unique identifier of a test job","in":"path","required":true,"schema":{"type":"string"}}},"responses":{"ErrorResponse":{"description":"An error has occured","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorMessage"}}}}},"schemas":{"TestJobSummary":{"type":"object","description":"Data structure for test job summary.","properties":{"userName":{"type":"string","description":"The name of the user who made the test job request."},"projectName":{"type":"string","description":"The name of the executed project."},"status":{"type":"string","description":"Current test job status. If the assertion fail, the test is also FAILED.","enum":["QUEUED","RUNNING","CANCELED","FINISHED","FAILED"]},"totalTime":{"type":"integer","description":"Time taken (ms) to run the test job.","format":"int64"},"startTime":{"type":"integer","description":"The timestamp of the test job start.","format":"int64"},"submitTime":{"type":"integer","description":"The timestamp of when the test job was submitted.","format":"int64"},"queueTime":{"type":"integer","description":"Time spent in QUEUED state before starting.","format":"int64"},"testjobId":{"type":"string","description":"The identifier of the test run."},"executionParameters":{"$ref":"#/components/schemas/ExecutionParameters"}}},"TestJobReport":{"allOf":[{"$ref":"#/components/schemas/TestJobSummary"},{"type":"object","required":["testSuiteResultReports"],"properties":{"testSuiteResultReports":{"type":"array","description":"The array of reports for test suites in the test job.","items":{"$ref":"#/components/schemas/TestSuiteResultReport"}}}}]},"UnresolvedFile":{"type":"object","properties":{"fileName":{"type":"string","description":"Name of the unresolved file"}}},"TestStepResultReport":{"type":"object","description":"Data structure for test step results in the report.","properties":{"testStepName":{"type":"string","description":"The name of the test step"},"testStepType":{"type":"string","description":"The type of the test step"},"totalTestStepTime":{"type":"integer","description":"Time taken (ms) to run the test step.","format":"int64"},"assertionStatus":{"type":"string","description":"Specifies if the assertions failed or succeeded.","enum":["UNKNOWN","PASS","FAIL","CANCELED"]},"requestTimings":{"$ref":"#/components/schemas/RequestTimings"},"transactionId":{"type":"string","description":"The transaction id to identify a particular test job of a test step."},"transaction":{"type":"string","description":"The path to the transaction"},"messages":{"type":"array","description":"Error messages returned by the assertions.","items":{"type":"string"}}}},"RequestTimings":{"type":"object","description":"Timings for a request withing a test step","properties":{"readTime":{"type":"integer","description":"Response read time (ms) for a http request.","format":"int64"},"totalRequestTime":{"type":"integer","description":"Total time (ms) taken by http request.","format":"int64"},"connectionTime":{"type":"integer","description":"Connection creation time (ms).","format":"int64"},"timeToFirstByte":{"type":"integer","description":"Time taken (ms) to receive first byte.","format":"int64"},"connectTime":{"type":"integer","description":"Time taken (ms) to connect","format":"int64"},"timeStamp":{"type":"integer","description":"Time when request started","format":"int64"}}},"TestCaseResultReport":{"type":"object","description":"Data structure for the test results report of the test case test job.","required":["testStepResultReports"],"properties":{"testCaseName":{"type":"string","description":"The name of the test case the report is for."},"totalTestCaseTime":{"type":"integer","description":"Time taken (ms) to run the test case.","format":"int64"},"properties":{"type":"object","additionalProperties":{"type":"string"}},"testStepResultReports":{"type":"array","description":"The array of test step result reports.","items":{"$ref":"#/components/schemas/TestStepResultReport"}}}},"TestSuiteResultReport":{"type":"object","description":"Results of a test suite test job.","required":["testCaseResultReports"],"properties":{"testSuiteName":{"type":"string","description":"The test suite name."},"totalTestSuiteTime":{"type":"integer","description":"Time taken (ms) to run the test suite.","format":"int64"},"testCaseResultReports":{"type":"array","description":"An array of test case test job results.","items":{"$ref":"#/components/schemas/TestCaseResultReport"}}}},"HarLogRoot":{"type":"object","properties":{"log":{"$ref":"#/components/schemas/HarLog"}}},"HarLog":{"type":"object","properties":{"version":{"type":"string"},"creator":{"$ref":"#/components/schemas/HarCreator"},"browser":{"$ref":"#/components/schemas/HarBrowser"},"pages":{"type":"array","items":{"$ref":"#/components/schemas/HarPage"}},"entries":{"type":"array","items":{"$ref":"#/components/schemas/HarEntry"}},"comment":{"type":"string"}}},"HarCreator":{"type":"object","properties":{"name":{"type":"string"},"version":{"type":"string"},"comment":{"type":"string"}}},"HarBrowser":{"type":"object","properties":{"name":{"type":"string"},"version":{"type":"string"},"comment":{"type":"string"}}},"HarPage":{"type":"object","properties":{"startedDateTime":{"type":"string"},"id":{"type":"string"},"title":{"type":"string"},"pageTimings":{"$ref":"#/components/schemas/HarPageTimings"},"comment":{"type":"string"}}},"HarPageTimings":{"type":"object","properties":{"onContentLoad":{"type":"integer","format":"int64"},"onLoad":{"type":"integer","format":"int64"},"comment":{"type":"string"}}},"HarEntry":{"type":"object","properties":{"pageref":{"type":"string"},"startedDateTime":{"type":"string"},"time":{"type":"integer","format":"int64"},"request":{"$ref":"#/components/schemas/HarRequest"},"response":{"$ref":"#/components/schemas/HarResponse"},"cache":{"$ref":"#/components/schemas/HarCache"},"timings":{"$ref":"#/components/schemas/HarTimings"},"serverIPAddress":{"type":"string"},"connection":{"type":"string"},"comment":{"type":"string"}}},"HarRequest":{"type":"object","properties":{"method":{"type":"string"},"url":{"type":"string"},"httpVersion":{"type":"string"},"cookies":{"type":"array","items":{"$ref":"#/components/schemas/HarCookie"}},"headers":{"type":"array","items":{"$ref":"#/components/schemas/HarHeader"}},"queryString":{"type":"array","items":{"$ref":"#/components/schemas/HarQueryString"}},"postData":{"$ref":"#/components/schemas/HarPostData"},"headersSize":{"type":"integer","format":"int64"},"bodySize":{"type":"integer","format":"int64"},"comment":{"type":"string"}}},"HarResponse":{"type":"object","properties":{"status":{"type":"integer","format":"int32"},"statusText":{"type":"string"},"httpVersion":{"type":"string"},"cookies":{"type":"array","items":{"$ref":"#/components/schemas/HarCookie"}},"headers":{"type":"array","items":{"$ref":"#/components/schemas/HarHeader"}},"content":{"$ref":"#/components/schemas/HarContent"},"redirectURL":{"type":"string"},"headersSize":{"type":"integer","format":"int64"},"bodySize":{"type":"integer","format":"int64"},"comment":{"type":"string"}}},"HarCache":{"type":"object","properties":{"beforeRequest":{"$ref":"#/components/schemas/HarCacheRequest"},"afterRequest":{"$ref":"#/components/schemas/HarCacheRequest"},"comment":{"type":"string"}}},"HarTimings":{"type":"object","properties":{"blocked":{"type":"integer","format":"int64"},"connect":{"type":"integer","format":"int64"},"send":{"type":"integer","format":"int64"},"wait":{"type":"integer","format":"int64"},"receive":{"type":"integer","format":"int64"},"ssl":{"type":"integer","format":"int64"},"comment":{"type":"string"}}},"HarCookie":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"},"path":{"type":"string"},"domain":{"type":"string"},"expires":{"type":"string"},"httpOnly":{"type":"boolean","default":false},"secure":{"type":"boolean","default":false},"comment":{"type":"string"}}},"HarHeader":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"},"comment":{"type":"string"}}},"HarContent":{"type":"object","properties":{"size":{"type":"integer","format":"int64"},"compression":{"type":"integer","format":"int64"},"mimeType":{"type":"string"},"text":{"type":"string"},"comment":{"type":"string"}}},"HarQueryString":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"},"comment":{"type":"string"}}},"HarCacheRequest":{"type":"object","properties":{"expires":{"type":"string","format":"date-time"},"lastAccess":{"type":"string","format":"date-time"},"hitCount":{"type":"integer","format":"int64"},"comment":{"type":"string"},"etag":{"type":"string"}}},"HarPostData":{"type":"object","properties":{"mimeType":{"type":"string"},"params":{"type":"array","items":{"$ref":"#/components/schemas/HarParam"}},"text":{"type":"string"},"comment":{"type":"string"}}},"HarParam":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"},"fileName":{"type":"string"},"contentType":{"type":"string"},"comment":{"type":"string"}}},"User":{"description":"User object containing the basic user information which will be returned for the current user or when the user with role ADMIN tries to get all user information.","properties":{"userName":{"type":"string"},"password":{"type":"string"},"admin":{"type":"boolean"}}},"AuditEvent":{"description":"Object containing the log details.","properties":{"eventTime":{"type":"string","format":"date-time"},"userName":{"type":"string"},"eventType":{"type":"string"},"eventData":{"type":"object","additionalProperties":{"oneOf":[{"type":"string"},{"type":"integer"}]}}}},"AnalyticsProviderDetails":{"description":"Object containing details of analytics provider.","properties":{"provider":{"type":"string","description":"name of the analytics provider."},"token":{"type":"string","description":"token for provider."}}},"LicenseDetails":{"description":"Details of the licence installed.","properties":{"licensedModule":{"type":"string"},"userName":{"type":"string"},"organization":{"type":"string"},"startDate":{"type":"string","description":"The timestamp of activation.","format":"date-time"},"expireDate":{"type":"string","description":"The timestamp of expiration.","format":"date-time"},"licenseId":{"type":"string"},"professional":{"type":"boolean"},"fixed":{"type":"boolean"},"expired":{"type":"boolean"},"trial":{"type":"boolean"},"maxConcurrentJobs":{"type":"integer","format":"int32"}}},"UsageStatistics":{"description":"Usage statistics for TestEngine","properties":{"running":{"description":"Number of currently running jobs","type":"integer"},"queued":{"description":"Number of currently queued jobs","type":"integer"}}},"PeakUsageStatistics":{"description":"Peak value usage statistics for one hour","allOf":[{"$ref":"#/components/schemas/UsageStatistics"},{"type":"object","properties":{"from":{"type":"string","format":"date-time"},"to":{"type":"string","format":"date-time"},"maxConcurrentJobs":{"description":"The limit of the concurrent jobs at this time","type":"integer","format":"int32"}}}]},"JobCountStatistics":{"description":"Running / Queued statics for one hour","allOf":[{"$ref":"#/components/schemas/UsageStatistics"},{"type":"object","properties":{"from":{"type":"string","format":"date-time"},"to":{"type":"string","format":"date-time"}}}]},"JobWaitStatistics":{"description":"Maximum and average wait time","properties":{"from":{"type":"string","format":"date-time","description":"time since we need statics from."},"to":{"type":"string","format":"date-time","description":"time till we need statics."},"maxWaitTime":{"type":"integer","format":"int64","description":"time in millis"},"avgWaitTime":{"type":"integer","format":"int64","description":"time in millis"}}},"ExecutionParameters":{"description":"Details about the type of the test, what test case or test suite is requested.","properties":{"testSuiteName":{"description":"Name of test suite if present in request parameters","type":"string"},"testCaseName":{"description":"Name of test case if present in request parameters","type":"string"},"tags":{"description":"List of tags specified in request.","type":"array","items":{"type":"string"}}}},"LicenseActivationInfo":{"type":"object","required":["email","firstName","lastName"],"properties":{"email":{"type":"string","format":"email","example":"foo@bar.com"},"firstName":{"type":"string","example":"Foo"},"lastName":{"type":"string","example":"Bar"},"title":{"type":"string"},"company":{"type":"string","example":"My Company"},"address":{"type":"string","example":"1 Gold Bolvd"},"city":{"type":"string","example":"San Francisco"},"zipCode":{"type":"string","example":94401},"state":{"type":"string","example":"CA"},"country":{"type":"string","example":"USA"},"phone":{"type":"string","example":"+1 206 555 0100"}}},"ErrorMessage":{"type":"object","required":["code","message"],"properties":{"code":{"type":"integer"},"message":{"type":"string"},"details":{"type":"string"}}},"ServerSettings":{"description":"Settings for the server that can be updated while the server is running","properties":{"numberOfDaysToKeep":{"description":"The number of days records will be kept when ´DELETE /testjobs´ is called without the ´before´ parameter.","type":"integer","format":"int32"},"allowedConnectTargets":{"description":"External targets that the tests are allowed to connect to.","type":"array","items":{"type":"string"}},"allowedFilePaths":{"description":"Paths that the tests are allowed to read from/write to.","type":"array","items":{"type":"string"}}}}}}}]]></con:content>
        <con:type>https://swagger.io/openapiv3/specification</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
    </con:endpoints>
    <con:resource name="/testjobs" path="/testjobs" id="4f48fccd-a38b-4cb2-aa1b-4f81b3518813">
      <con:settings/>
      <con:parameters/>
      <con:method name="getTestjobs" id="66124567-5d6b-41f0-bab1-dadeb8c66f95" method="GET">
        <con:description>Use this operation to get results of the latest test runs stored in TestEngine.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>fetch</con:name>
            <con:style>QUERY</con:style>
            <con:description>Number of testjobs to return. Use `ALL´ to get all testjobs.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>[ {
  "userName" : "string",
  "projectName" : "string",
  "status" : "QUEUED",
  "totalTime" : 0,
  "startTime" : 0,
  "submitTime" : 0,
  "queueTime" : 0,
  "testjobId" : "string",
  "executionParameters" : {
    "testSuiteName" : "string",
    "testCaseName" : "string",
    "tags" : [ "string" ]
  }
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="0f898d34-2796-4865-82eb-a7e8dfb25692" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="postProjectTestjob" id="4f043e2e-31ab-4a8b-b07a-0d9b3fd29e87" method="POST">
        <con:description>Use this operation to send a ReadyAPI test project to TestEngine. You command TestEngine to execute the entire project, or an individual test suite or test case in it. The body of the request should be a ReadyAPI project file. Either send the .xml file as is, or zip it. A zip is needed to send in a composite project or when sending in a project with file dependencies.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>testSuiteName</con:name>
            <con:style>QUERY</con:style>
            <con:description>The name of the test suite to run.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>testCaseName</con:name>
            <con:style>QUERY</con:style>
            <con:description>The name of the test case to run.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>environment</con:name>
            <con:style>QUERY</con:style>
            <con:description>The target environment for test job.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>async</con:name>
            <con:style>QUERY</con:style>
            <con:description>Specifies when TestEngine replies:&lt;br/>`true` - Immediately.&lt;br/>`false` - After the test job is over.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>callback</con:name>
            <con:style>QUERY</con:style>
            <con:description>The URL, to which the results will be posted.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>clientCertFileName</con:name>
            <con:style>QUERY</con:style>
            <con:description>The name of the separately provided client certificate file.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>clientCertPassword</con:name>
            <con:style>QUERY</con:style>
            <con:description>The password for the separately provided client certificate file.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>projectPassword</con:name>
            <con:style>QUERY</con:style>
            <con:description>The password used to decrypt an encrypted project file.</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>hostAndPort</con:name>
            <con:style>QUERY</con:style>
            <con:description>The endpoint to be used for HTTP requests sent by this test, in the format host:[port].</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>tags</con:name>
            <con:style>QUERY</con:style>
            <con:description>A comma-separated list of tags identifying the test cases to be run when executing the test</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>proxyHost</con:name>
            <con:style>QUERY</con:style>
            <con:description>the HTTP proxy host</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>proxyPort</con:name>
            <con:style>QUERY</con:style>
            <con:description>the proxy port</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>proxyUsername</con:name>
            <con:style>QUERY</con:style>
            <con:description>the proxy username</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>proxyPassword</con:name>
            <con:style>QUERY</con:style>
            <con:description>the proxy password</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "userName" : "string",
  "projectName" : "string",
  "status" : "QUEUED",
  "totalTime" : 0,
  "startTime" : 0,
  "submitTime" : 0,
  "queueTime" : 0,
  "testjobId" : "string",
  "executionParameters" : {
    "testSuiteName" : "string",
    "testCaseName" : "string",
    "tags" : [ "string" ]
  },
  "testSuiteResultReports" : [ {
    "testSuiteName" : "string",
    "totalTestSuiteTime" : 0,
    "testCaseResultReports" : [ {
      "testCaseName" : "string",
      "totalTestCaseTime" : 0,
      "properties" : {
        "key" : "key",
        "additionalProperty" : "string"
      },
      "testStepResultReports" : [ {
        "testStepName" : "string",
        "testStepType" : "string",
        "totalTestStepTime" : 0,
        "assertionStatus" : "UNKNOWN",
        "requestTimings" : {
          "readTime" : 0,
          "totalRequestTime" : 0,
          "connectionTime" : 0,
          "timeToFirstByte" : 0,
          "connectTime" : 0,
          "timeStamp" : 0
        },
        "transactionId" : "string",
        "transaction" : "string",
        "messages" : [ "string" ]
      } ]
    } ]
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/junit+xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>412</con:status>
          <con:params/>
          <con:description>Request contains unresolved files needed to execute the test job. It can be data sources, attachment or client certificates mentioned in test job but not provided in the request. Resend the request with all mentioned files.</con:description>
          <con:sampleContent>[ {
  "fileName" : "string"
} ]</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/zip</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/xml</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:request name="Request 1" id="b545af03-dda7-476c-ac4f-c19c4d11ec46" mediaType="application/zip">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
        <con:request name="Request 2" id="5a36ba24-ce74-4f7c-bca2-dd5797e1d480" mediaType="application/xml">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
        <con:request name="Request 3" id="cff085b4-07a3-4d0c-ab48-a394991bf630" mediaType="multipart/form-data">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="deleteTestJobs" id="e67023d8-cc77-4458-bbd1-4c39bfc31a82" method="DELETE">
        <con:description>Delete jobs older than the specified date. If a date is not provided, test jobs older than a default number of days will be deleted. The default can be changed by changing `numberOfDaysToKeep` in the configuration file.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>before</con:name>
            <con:style>QUERY</con:style>
            <con:description>Testjobs older than this date/time will be deleted.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Test jobs were successfully deleted</con:description>
          <con:sampleContent>0</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="1442aa2a-77e6-4a30-b99f-e45161aaba45" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/testjobs/{testjobId}" path="/testjobs/{testjobId}" id="365618f3-c583-40ff-a9b0-a0ae19fe229f">
      <con:settings/>
      <con:parameters/>
      <con:method name="cancelTestjob" id="e315302c-b886-4ee3-9105-8dbe789aa2fc" method="DELETE">
        <con:description>Use this operation to stop the run specified by &lt;i>testjobId&lt;/i>. You can find the testjobId in the response to your testjob request, or you can send a GET &lt;code>/testjobs&lt;/code> request to the TestEngine.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>testjobId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier of a test job</con:description>
          </con:parameter>
        </con:parameters>
        <con:request name="Request 1" id="81d2cdb0-da54-445f-8153-ea41be8292e9" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/testjobs/{testjobId}/report" path="/testjobs/{testjobId}/report" id="6eec52a8-606e-4843-b189-457c529aaf6f">
      <con:settings/>
      <con:parameters/>
      <con:method name="getTestjobReport" id="f5350215-ee43-45b3-983d-6decc88772c2" method="GET">
        <con:description>Use this operation to get information on the testjob specified by &lt;i>testjobId&lt;/i>.  You can find in the response to your testjob request , or you can send a GET &lt;code>/testjobs&lt;/code> request to TestEngine.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>testjobId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier of a test job</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "userName" : "string",
  "projectName" : "string",
  "status" : "QUEUED",
  "totalTime" : 0,
  "startTime" : 0,
  "submitTime" : 0,
  "queueTime" : 0,
  "testjobId" : "string",
  "executionParameters" : {
    "testSuiteName" : "string",
    "testCaseName" : "string",
    "tags" : [ "string" ]
  },
  "testSuiteResultReports" : [ {
    "testSuiteName" : "string",
    "totalTestSuiteTime" : 0,
    "testCaseResultReports" : [ {
      "testCaseName" : "string",
      "totalTestCaseTime" : 0,
      "properties" : {
        "key" : "key",
        "additionalProperty" : "string"
      },
      "testStepResultReports" : [ {
        "testStepName" : "string",
        "testStepType" : "string",
        "totalTestStepTime" : 0,
        "assertionStatus" : "UNKNOWN",
        "requestTimings" : {
          "readTime" : 0,
          "totalRequestTime" : 0,
          "connectionTime" : 0,
          "timeToFirstByte" : 0,
          "connectTime" : 0,
          "timeStamp" : 0
        },
        "transactionId" : "string",
        "transaction" : "string",
        "messages" : [ "string" ]
      } ]
    } ]
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/junit+xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
        </con:representation>
        <con:request name="Request 1" id="70fccaca-08e1-4a01-bb18-65ecd2abf54a" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:request/>
          <con:originalUri>https://api.swaggerhub.com/testjobs/123/report</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <entry key="testjobId" value="123" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/testjobs/{testjobId}/transactions" path="/testjobs/{testjobId}/transactions" id="958c2571-4951-41aa-b49e-fa96392a8134">
      <con:settings/>
      <con:parameters/>
      <con:method name="getTransactions" id="fbe1e824-3d4d-4da8-8442-eb9d3ac11ebb" method="GET">
        <con:description>Use this operation to get transaction logs (individual request and response of executed test steps) of the test job specified by &lt;i>test jobID&lt;/i>.  You can find it in the response of your test job request , or you can send a GET &lt;code>/testjobs/{testjobId}/logs&lt;/code> request to TestEngine.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>testjobId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier of a test job</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "log" : {
    "version" : "string",
    "creator" : {
      "name" : "string",
      "version" : "string",
      "comment" : "string"
    },
    "browser" : {
      "name" : "string",
      "version" : "string",
      "comment" : "string"
    },
    "pages" : [ {
      "startedDateTime" : "string",
      "id" : "string",
      "title" : "string",
      "pageTimings" : {
        "onContentLoad" : 0,
        "onLoad" : 0,
        "comment" : "string"
      },
      "comment" : "string"
    } ],
    "entries" : [ {
      "pageref" : "string",
      "startedDateTime" : "string",
      "time" : 0,
      "request" : {
        "method" : "string",
        "url" : "string",
        "httpVersion" : "string",
        "cookies" : [ {
          "name" : "string",
          "value" : "string",
          "path" : "string",
          "domain" : "string",
          "expires" : "string",
          "httpOnly" : false,
          "secure" : false,
          "comment" : "string"
        } ],
        "headers" : [ {
          "name" : "string",
          "value" : "string",
          "comment" : "string"
        } ],
        "queryString" : [ {
          "name" : "string",
          "value" : "string",
          "comment" : "string"
        } ],
        "postData" : {
          "mimeType" : "string",
          "params" : [ {
            "name" : "string",
            "value" : "string",
            "fileName" : "string",
            "contentType" : "string",
            "comment" : "string"
          } ],
          "text" : "string",
          "comment" : "string"
        },
        "headersSize" : 0,
        "bodySize" : 0,
        "comment" : "string"
      },
      "response" : {
        "status" : 0,
        "statusText" : "string",
        "httpVersion" : "string",
        "cookies" : [ {
          "name" : "string",
          "value" : "string",
          "path" : "string",
          "domain" : "string",
          "expires" : "string",
          "httpOnly" : false,
          "secure" : false,
          "comment" : "string"
        } ],
        "headers" : [ {
          "name" : "string",
          "value" : "string",
          "comment" : "string"
        } ],
        "content" : {
          "size" : 0,
          "compression" : 0,
          "mimeType" : "string",
          "text" : "string",
          "comment" : "string"
        },
        "redirectURL" : "string",
        "headersSize" : 0,
        "bodySize" : 0,
        "comment" : "string"
      },
      "cache" : {
        "beforeRequest" : {
          "expires" : "2015-07-20T15:49:04-07:00",
          "lastAccess" : "2015-07-20T15:49:04-07:00",
          "hitCount" : 0,
          "comment" : "string",
          "etag" : "string"
        },
        "afterRequest" : {
          "expires" : "2015-07-20T15:49:04-07:00",
          "lastAccess" : "2015-07-20T15:49:04-07:00",
          "hitCount" : 0,
          "comment" : "string",
          "etag" : "string"
        },
        "comment" : "string"
      },
      "timings" : {
        "blocked" : 0,
        "connect" : 0,
        "send" : 0,
        "wait" : 0,
        "receive" : 0,
        "ssl" : 0,
        "comment" : "string"
      },
      "serverIPAddress" : "string",
      "connection" : "string",
      "comment" : "string"
    } ],
    "comment" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="ee86f7ed-4c6e-45d1-86b7-e898c7ce0ac7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/testjobs/{testjobId}/transactions/{transactionId}" path="/testjobs/{testjobId}/transactions/{transactionId}" id="b3b881a2-cf1b-463d-94e2-3106d0a92575">
      <con:settings/>
      <con:parameters/>
      <con:method name="getTransaction" id="e94c0f60-89c0-4e86-99ba-f79ca857838f" method="GET">
        <con:description>A particular test job of a test step is referred as transaction. Use this operation to get the request and response for a transaction in HAR format.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>testjobId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier of a test job</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>transactionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The id of the transaction (test step test job) to get the message exchange (request and response) for.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "log" : {
    "version" : "string",
    "creator" : {
      "name" : "string",
      "version" : "string",
      "comment" : "string"
    },
    "browser" : {
      "name" : "string",
      "version" : "string",
      "comment" : "string"
    },
    "pages" : [ {
      "startedDateTime" : "string",
      "id" : "string",
      "title" : "string",
      "pageTimings" : {
        "onContentLoad" : 0,
        "onLoad" : 0,
        "comment" : "string"
      },
      "comment" : "string"
    } ],
    "entries" : [ {
      "pageref" : "string",
      "startedDateTime" : "string",
      "time" : 0,
      "request" : {
        "method" : "string",
        "url" : "string",
        "httpVersion" : "string",
        "cookies" : [ {
          "name" : "string",
          "value" : "string",
          "path" : "string",
          "domain" : "string",
          "expires" : "string",
          "httpOnly" : false,
          "secure" : false,
          "comment" : "string"
        } ],
        "headers" : [ {
          "name" : "string",
          "value" : "string",
          "comment" : "string"
        } ],
        "queryString" : [ {
          "name" : "string",
          "value" : "string",
          "comment" : "string"
        } ],
        "postData" : {
          "mimeType" : "string",
          "params" : [ {
            "name" : "string",
            "value" : "string",
            "fileName" : "string",
            "contentType" : "string",
            "comment" : "string"
          } ],
          "text" : "string",
          "comment" : "string"
        },
        "headersSize" : 0,
        "bodySize" : 0,
        "comment" : "string"
      },
      "response" : {
        "status" : 0,
        "statusText" : "string",
        "httpVersion" : "string",
        "cookies" : [ {
          "name" : "string",
          "value" : "string",
          "path" : "string",
          "domain" : "string",
          "expires" : "string",
          "httpOnly" : false,
          "secure" : false,
          "comment" : "string"
        } ],
        "headers" : [ {
          "name" : "string",
          "value" : "string",
          "comment" : "string"
        } ],
        "content" : {
          "size" : 0,
          "compression" : 0,
          "mimeType" : "string",
          "text" : "string",
          "comment" : "string"
        },
        "redirectURL" : "string",
        "headersSize" : 0,
        "bodySize" : 0,
        "comment" : "string"
      },
      "cache" : {
        "beforeRequest" : {
          "expires" : "2015-07-20T15:49:04-07:00",
          "lastAccess" : "2015-07-20T15:49:04-07:00",
          "hitCount" : 0,
          "comment" : "string",
          "etag" : "string"
        },
        "afterRequest" : {
          "expires" : "2015-07-20T15:49:04-07:00",
          "lastAccess" : "2015-07-20T15:49:04-07:00",
          "hitCount" : 0,
          "comment" : "string",
          "etag" : "string"
        },
        "comment" : "string"
      },
      "timings" : {
        "blocked" : 0,
        "connect" : 0,
        "send" : 0,
        "wait" : 0,
        "receive" : 0,
        "ssl" : 0,
        "comment" : "string"
      },
      "serverIPAddress" : "string",
      "connection" : "string",
      "comment" : "string"
    } ],
    "comment" : "string"
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="dd662658-58cb-46cf-bf32-0d97e6342cf5" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/testjobs/stats/current" path="/testjobs/stats/current" id="0966edd9-89e1-478f-a9b3-44a2acedb2bb">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="25d08369-aff2-4b86-a391-df477398f2be" method="GET">
        <con:description>TestEngine statistics</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "running" : 0,
  "queued" : 0
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="d9b1b149-eec5-47ef-afa8-721f44c7cfa0" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/testjobs/stats/peak" path="/testjobs/stats/peak" id="cfec3b6d-93bc-402c-b39d-99e9e005fadd">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="8e2e42d7-1a17-4f43-964e-cc083d371f18" method="GET">
        <con:description>TestEngine peak statistics</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>from</con:name>
            <con:style>QUERY</con:style>
            <con:description>The timestamp to return statistics from</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>to</con:name>
            <con:style>QUERY</con:style>
            <con:description>The timestamp to return statistics to</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>[ {
  "running" : 0,
  "queued" : 0,
  "from" : "2015-07-20T15:49:04-07:00",
  "to" : "2015-07-20T15:49:04-07:00",
  "maxConcurrentJobs" : 0
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="9a07b18c-8f53-472a-b4d3-ab256c67f22f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/testjobs/stats/count" path="/testjobs/stats/count" id="ab5f7b59-5569-4aec-b04f-d8700303472a">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="e435a8ac-398f-49ae-8d17-1cd9dccee363" method="GET">
        <con:description>TestEngine run statistics</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>from</con:name>
            <con:style>QUERY</con:style>
            <con:description>The timestamp to return statistics from, default will be 24 hours</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>to</con:name>
            <con:style>QUERY</con:style>
            <con:description>The timestamp to return statistics to</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>[ {
  "running" : 0,
  "queued" : 0,
  "from" : "2015-07-20T15:49:04-07:00",
  "to" : "2015-07-20T15:49:04-07:00"
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="1caa22b8-185e-4e02-b81e-0270571ca025" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/testjobs/stats/wait" path="/testjobs/stats/wait" id="88ed2f94-4791-43a6-af58-d372b5e80244">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="07120d41-f348-421d-8230-37acd5a5cf86" method="GET">
        <con:description>TestEngine run statistics</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>from</con:name>
            <con:style>QUERY</con:style>
            <con:description>The timestamp to return statistics from, default will be 24 hours</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>to</con:name>
            <con:style>QUERY</con:style>
            <con:description>The timestamp to return statistics to</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>[ {
  "from" : "2015-07-20T15:49:04-07:00",
  "to" : "2015-07-20T15:49:04-07:00",
  "maxWaitTime" : 0,
  "avgWaitTime" : 0
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="58c4d007-8020-4c6d-8031-66a0130efecf" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/users" path="/users" id="412e33ab-a028-4551-8889-c786e88d8504">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="ef562ec6-974a-41e0-9e47-99347d4f9b23" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>[ {
  "userName" : "string",
  "password" : "string",
  "admin" : true
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="c1553855-f1af-48be-8e5b-02b65c57165f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="POST" id="e8f73169-bbbb-4432-82af-9ac781d8f42a" method="POST">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "userName" : "string",
  "password" : "string",
  "admin" : true
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "userName" : "string",
  "password" : "string",
  "admin" : true
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="52a12d41-1107-438c-b9f7-9794acaf4a33" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:request>{\r
  "userName" : "string",\r
  "password" : "string",\r
  "admin" : true\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/users/{username}" path="/users/{username}" id="4400c41d-aeac-4444-bede-ffe4985e29a4">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="c7d61d97-dd38-494b-8a46-feff33a0e00c" method="GET">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>username</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The username to request information for</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "userName" : "string",
  "password" : "string",
  "admin" : true
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:description>The authenticated user does not have access to the requested user</con:description>
          <con:sampleContent>{
  "code" : 0,
  "message" : "string",
  "details" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>The user does not exist</con:description>
          <con:sampleContent>{
  "code" : 0,
  "message" : "string",
  "details" : "string"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="99236cb8-2ae8-4400-bb9d-026a7c221746" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="19b1a708-e0d9-4b8f-86bf-d97ff8a995a7" method="DELETE">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>username</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The username to request information for</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:description>The authenticated user does not have access to the requested user</con:description>
          <con:sampleContent>{
  "code" : 0,
  "message" : "string",
  "details" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>user not found</con:description>
          <con:sampleContent>{
  "code" : 0,
  "message" : "string",
  "details" : "string"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="763d8704-2572-4281-9a62-a68860274bb1" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="PUT" id="481b6c73-5e10-4f71-b0b2-1b111ff9627f" method="PUT">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>username</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The username to update information for</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "userName" : "string",
  "password" : "string",
  "admin" : true
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:description>The authenticated user does not have access to the requested user</con:description>
          <con:sampleContent>{
  "code" : 0,
  "message" : "string",
  "details" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>The user does not exist</con:description>
          <con:sampleContent>{
  "code" : 0,
  "message" : "string",
  "details" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "userName" : "string",
  "password" : "string",
  "admin" : true
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="4a7ed6bf-8a88-487e-b586-f32ecf654872" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:request>{\r
  "userName" : "string",\r
  "password" : "string",\r
  "admin" : true\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/token" path="/token" id="68e1ec1e-0e0f-4cd3-b280-ee0d16f19397">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="ed092fce-b3d2-43ac-9c80-d910e0145042" method="GET">
        <con:description>This will provide us a JWT token with a short validity, and can be used to connect to WebSocket</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>string</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="dfc192ec-9e11-4d94-a2dc-fab7d502ef2f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/auditlog" path="/auditlog" id="d1ef1f62-5ff7-4de3-be62-d166b1143736">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="37764621-541e-41e4-bce1-6479b7418ac4" method="GET">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>userName</con:name>
            <con:style>QUERY</con:style>
            <con:description>The username to request information for</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>from</con:name>
            <con:style>QUERY</con:style>
            <con:description>start date and time, example: 2017-07-21T17:32:28Z</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>to</con:name>
            <con:style>QUERY</con:style>
            <con:description>end date and time, example: 2017-07-21T17:32:28Z</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>sortOrder</con:name>
            <con:style>QUERY</con:style>
            <con:description>Optional parameter for sorting the list on the time.</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>[ {
  "eventTime" : "2015-07-20T15:49:04-07:00",
  "userName" : "string",
  "eventType" : "string",
  "eventData" : {
    "key" : "key",
    "additionalProperty" : "string"
  }
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="a0a7ae8d-344f-45da-9055-07d0bfb91901" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/analytics" path="/analytics" id="655da74a-3fe5-4d68-8371-0f8b08fca129">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="77540344-9af6-42cc-8547-d8427d9ede8d" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "provider" : "string",
  "token" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>Analytics disabled</con:description>
          <con:sampleContent>{
  "code" : 0,
  "message" : "string",
  "details" : "string"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="c2207db0-4930-4e89-bf02-d0f7136b30c2" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/license" path="/license" id="8ad16060-3e46-478f-9650-1561844d4b32">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="e595d7ae-a0f2-41b7-a2f9-3a626239d996" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "licensedModule" : "string",
  "userName" : "string",
  "organization" : "string",
  "startDate" : "2015-07-20T15:49:04-07:00",
  "expireDate" : "2015-07-20T15:49:04-07:00",
  "licenseId" : "string",
  "professional" : true,
  "fixed" : true,
  "expired" : true,
  "trial" : true,
  "maxConcurrentJobs" : 0
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="ac60afdd-cc4e-413b-b540-acc8c8cf06d7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="POST" id="9e6c834d-a74b-49c2-b840-c4f32fefb639" method="POST">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "licensedModule" : "string",
  "userName" : "string",
  "organization" : "string",
  "startDate" : "2015-07-20T15:49:04-07:00",
  "expireDate" : "2015-07-20T15:49:04-07:00",
  "licenseId" : "string",
  "professional" : true,
  "fixed" : true,
  "expired" : true,
  "trial" : true,
  "maxConcurrentJobs" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:description>Unable to install or activate license</con:description>
          <con:sampleContent>{
  "code" : 0,
  "message" : "string",
  "details" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:request name="Request 1" id="96b6667a-264a-4708-8017-adc40c9a3443" mediaType="multipart/form-data">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="DELETE" id="1915cf0b-222e-45b6-ae56-cb1ce857c66f" method="DELETE">
        <con:description>This will deactivate the license.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:request name="Request 1" id="ddfd406f-3ee6-4296-ad30-abefd442f4b4" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/settings" path="/settings" id="624fbf98-567c-483b-92b6-58aaf3efd85f">
      <con:settings/>
      <con:parameters/>
      <con:method name="getServerSettings" id="7628da65-f728-4c60-86a2-209bde1d1971" method="GET">
        <con:description>Retrieve current settings from the server</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>OK</con:description>
          <con:sampleContent>{
  "numberOfDaysToKeep" : 0,
  "allowedConnectTargets" : [ "string" ],
  "allowedFilePaths" : [ "string" ]
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="e8b506e8-8ffc-447e-bc43-916fa4068ca9" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="updateServerSettings" id="566cde86-0f34-4829-88ff-922d6dc48781" method="PUT">
        <con:description>Update the settings on the server</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Settings successfully updated</con:description>
          <con:sampleContent>{
  "numberOfDaysToKeep" : 0,
  "allowedConnectTargets" : [ "string" ],
  "allowedFilePaths" : [ "string" ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "numberOfDaysToKeep" : 0,
  "allowedConnectTargets" : [ "string" ],
  "allowedFilePaths" : [ "string" ]
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="4e2b70ab-7ca9-4f81-bb9b-562b64138a70" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://api.swaggerhub.com/</con:endpoint>
          <con:request>{\r
  "numberOfDaysToKeep" : 0,\r
  "allowedConnectTargets" : [ "string" ],\r
  "allowedFilePaths" : [ "string" ]\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="8e05268e-35b0-4021-860b-df22e10ca731" name="TestSuite 1" authProfile="SAMPLE_AUTH">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="a05d62f5-7d67-44a0-bf9a-2d9b06e0995f" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TestCase 1" searchProperties="true" timeout="0" maxResults="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" zephyrTestName="" zephyrTestId="">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="groovy" name="Groovy Script" id="b3c7e581-0037-473e-960c-e4f6568b89fb">
        <con:settings/>
        <con:config>
          <script>def randomValue = Math.abs(new Random().nextInt() % 500000) + 500

testRunner.testCase.setPropertyValue("waitTime", randomValue.toString())</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasource" name="DataSource" id="64792247-b255-4ca8-bbe6-67751853264e">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="Grid">
            <con:configuration>
              <check><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry></xml-fragment>]]></check>
              <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">hound</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
              <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">corgi</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
              <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">bulldog</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">3</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
              <recognizeAsPlainText>true</recognizeAsPlainText>
            </con:configuration>
          </con:dataSource>
          <con:shared>true</con:shared>
          <con:restartShared>true</con:restartShared>
          <con:property>breed_name</con:property>
          <con:property>some_other_data</con:property>
          <con:completeLastOperation>true</con:completeLastOperation>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GET - Request 1" id="de6fbeee-3976-4b34-a318-b69c8f8ef788">
        <con:settings/>
        <con:config service="https://dog.ceo" resourcePath="/breed/{breed_name}/images/random" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET - Request 1" id="dcaba075-d0b1-43bd-b5e2-0f954c75c7c8" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://dog.ceo/api</con:endpoint>
            <con:request/>
            <con:originalUri>https://dog.ceo/api/breed/hound/images/random</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="72885ae6-f3b9-4f7e-981f-93e4fbf459f2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="b14bb7e7-04bd-4dd7-9f6a-a38cf6571b21" name="Script Assertion">
              <con:configuration>
                <scriptText>def randomCheck = Math.abs(new Random().nextInt() % 10) + 1

if (randomCheck &lt; 5) {
	assert true
} else {
	assert false
}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <entry key="breed_name" value="corgi" xmlns="http://eviware.com/soapui/config"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>breed_name</con:entry>
              <con:entry>Auth_token</con:entry>
            </con:parameterOrder>
            <con:environmentSpec>
              <con:entry environmentId="b3cbd788-c58c-4164-ace0-3620088e7f7d">
                <con:authProfile>No Authorization</con:authProfile>
              </con:entry>
            </con:environmentSpec>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="a2ff4d13-1481-4568-86aa-550f7992f7ca">
        <con:settings/>
        <con:config>
          <delay>${#TestCase#waitTime}</delay>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>waitTime</con:name>
          <con:value>3373763</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>a2ff4d13-1481-4568-86aa-550f7992f7ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b3c7e581-0037-473e-960c-e4f6568b89fb</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:restMockService id="0a545e5f-5bc3-4110-9fc8-3df340531758" port="8088" path="/" host="localhost" name="https://dog.ceo Virtual Service" routeModeEnabled="true">
    <con:settings/>
    <con:properties/>
    <con:constraints>
      <con:congestion>0</con:congestion>
      <con:inputBandwidth>-1</con:inputBandwidth>
      <con:outputBandwidth>-1</con:outputBandwidth>
      <con:maxThreadPoolCapacity>20</con:maxThreadPoolCapacity>
      <con:coreThreadPoolCapacity>5</con:coreThreadPoolCapacity>
      <con:virtError>
        <con:start>0</con:start>
        <con:endless>true</con:endless>
      </con:virtError>
    </con:constraints>
    <con:headerValidator type="NONE"/>
    <con:restMockAction name="/breeds" method="GET" resourcePath="/breeds" id="a68319cb-96f7-447c-b8a5-8e709644884e">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="148f8a38-b383-471e-8bda-4d0bd85bb816" httpResponseStatus="200" dataSource="">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breeds/list/all" method="GET" resourcePath="/breeds/list/all" id="26107866-cc34-41b7-8fc2-8f11ad11e04d">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="cb787eea-ca1c-4435-a365-a08f6fdfb943" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
      <con:response name="Response 2" id="12a5d6c8-f331-424d-9148-183fee76904c" httpResponseStatus="0" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breeds/image/random" method="GET" resourcePath="/breeds/image/random" id="296d99a6-acdc-45b0-ab24-b80d97ae8095">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="877b29f6-e064-49ad-ba31-30e65dca540c" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}" method="GET" resourcePath="/breed/{breed_name}" id="2dc26061-e78d-415d-b445-db2223c1452b">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="a6d82d23-948c-4675-bf72-8e382301cd56" httpResponseStatus="200" dataSource="">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}/images" method="GET" resourcePath="/breed/{breed_name}/images" id="68454825-38c7-438c-8f69-877f42bcd0b3">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="31acf6bb-98ca-4bcc-b8eb-c13f605c6254" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}/images/random" method="GET" resourcePath="/breed/{breed_name}/images/random" id="024f1823-2a66-40ca-a2a3-8fa175fadeef">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="c55a2832-dfa5-41e5-8cba-303a64bc1500" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}/images/random/{image_count}" method="GET" resourcePath="/breed/{breed_name}/images/random/{image_count}" id="45b7dcea-bb69-4979-b7f4-827362f067c6">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="489925b2-b3ad-49cc-a417-176185ab44e2" httpResponseStatus="200" mediaType="text/html" encoding="UTF-8" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
      <con:response name="Response 2" id="d00d578c-a7b8-4a3c-8947-bc949ca44d18" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
      <con:response name="Response 3" id="340d4b54-a108-4c48-a10d-e0023824c685" httpResponseStatus="200" mediaType="text/html" encoding="utf-8" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}/list" method="GET" resourcePath="/breed/{breed_name}/list" id="ce2ccbe4-7b00-4696-bdb1-c677e6ccd6c3">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="3f335703-606f-4773-8d06-8d410931471f" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}/{sub_breed}" method="GET" resourcePath="/breed/{breed_name}/{sub_breed}" id="e5d5af3e-4234-4317-8d08-d1938e7bcfbf">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="cfbe724e-2725-4034-a455-933abce03b2c" httpResponseStatus="200" dataSource="">
        <con:settings/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}/{sub_breed}/images" method="GET" resourcePath="/breed/{breed_name}/{sub_breed}/images" id="038e02d9-d87c-4902-bed1-f97fac0cc7ed">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="cfb72639-0897-44a1-b597-a75472fa6721" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}/{sub_breed}/images/random" method="GET" resourcePath="/breed/{breed_name}/{sub_breed}/images/random" id="a7318dfc-c1cb-4282-937f-bea00a90b148">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="d798fb38-eb0a-4c57-820b-9121660b6625" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
    <con:restMockAction name="/breed/{breed_name}/{sub_breed}/images/random/{image_count}" method="GET" resourcePath="/breed/{breed_name}/{sub_breed}/images/random/{image_count}" id="eda87e91-f03a-4700-8ee2-f142dbfcdfcd">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeScript/>
      <con:response name="Response 1" id="74c089e0-911b-46ba-bb34-8e742c088dbe" httpResponseStatus="200" mediaType="application/json" dataSource="">
        <con:settings/>
        <con:responseContent/>
      </con:response>
    </con:restMockAction>
  </con:restMockService>
  <con:restMockService id="25917067-0615-4ad9-be61-d204790da71d" port="8081" path="/" host="localhost" name="REST Virtual Service 1" routeModeEnabled="true" routeUnmatchedOperation="false" addUnmatchedOperation="false" routeEndpoint="http://localhost:8088">
    <con:settings/>
    <con:properties/>
    <con:constraints>
      <con:congestion>0</con:congestion>
      <con:inputBandwidth>-1</con:inputBandwidth>
      <con:outputBandwidth>-1</con:outputBandwidth>
      <con:maxThreadPoolCapacity>20</con:maxThreadPoolCapacity>
      <con:coreThreadPoolCapacity>5</con:coreThreadPoolCapacity>
      <con:virtError>
        <con:start>0</con:start>
        <con:endless>true</con:endless>
      </con:virtError>
    </con:constraints>
    <con:headerValidator type="NONE"/>
    <con:restMockAction name="/status" method="GET" resourcePath="/status" id="8f0c6e72-09bf-48c2-8797-7e3c44b317c1">
      <con:settings/>
      <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
      <con:dispatchConfig/>
      <con:dispatchXPath/>
      <con:routeEnabled>true</con:routeEnabled>
      <con:conditionalRoutingEnabled>true</con:conditionalRoutingEnabled>
      <con:routeScript>//Route Based on Service Availability

// Capture incoming request parameters, can also capture payloads, headers, etc.
def incomingRequest = mockRequest.httpRequest
def path = mockRequest.path
def query = mockRequest.queryString
def method = mockRequest.method

// Define Route of Service to check, ideally this would be parameterized.
def route = "http://10.1.2.194:8086"

// Build Check Request based on incoming Request Parameters
def url = new URL(route + path.toString() + '?' + query.toString()) 

log.info("Routing " + incomingRequest + " to " + route + path.toString() + '?' + query.toString())

// Send Check Request
HttpURLConnection connection = (HttpURLConnection) url.openConnection()
connection.setRequestMethod("GET")
// connection.setConnectTimeout(10000)
connection.connect()
log.info(connection.responseCode)
log.info(connection)
if (connection.responseCode == 200 || connection.responseCode == 201) {
    // Route to Service if response code conditions are met.
    return true
} else {
    // Route to Virtual Service if response code conditions are not met.
    return false
}</con:routeScript>
    </con:restMockAction>
  </con:restMockService>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>newProp</con:name>
      <con:value>123</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository>
    <con:basicAuthEntry>
      <con:name>SAMPLE_AUTH</con:name>
      <con:type>Basic</con:type>
      <con:username>sample</con:username>
      <con:password>auth</con:password>
      <con:preemptive>true</con:preemptive>
    </con:basicAuthEntry>
    <con:basicAuthEntry>
      <con:name>basicAuth BASIC</con:name>
      <con:type>Basic</con:type>
    </con:basicAuthEntry>
  </con:authRepository>
  <con:loadUiTest name="Load Test 1" id="e387230d-85ba-4d74-be22-7469303981c4">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">a05d62f5-7d67-44a0-bf9a-2d9b06e0995f</con:setting>
      <con:setting id="soapUIObjectSourceType">soapUIObjectSourceType_TestCase</con:setting>
    </con:settings>
    <con1:loadui-project id="ecfe9a56-bbda-4860-a74f-93b11ebd9a77" label="Load Test 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.id" type="java.lang.String">e387230d-85ba-4d74-be22-7469303981c4</con1:property>
      </con1:properties>
      <con1:attributes/>
      <con1:addons/>
      <con1:scene label="New Scenario" id="acf4230b-eb52-4a38-b02f-ebc6a3f4d31b">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes/>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="3c76d77e-dfa3-4788-9939-96748cc1d465" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 1" id="c9fb9024-2a56-4225-a493-d9454a9950ef" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">250</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">10</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="TestSuite 1:TestCase 1" id="ae1727ad-203b-451c-ae51-9a922ede6f2b" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">a05d62f5-7d67-44a0-bf9a-2d9b06e0995f</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="3c76d77e-dfa3-4788-9939-96748cc1d465/outgoingTerminal" inputTerminalId="c9fb9024-2a56-4225-a493-d9454a9950ef/stateTerminal"/>
        <con1:connection outputTerminalId="c9fb9024-2a56-4225-a493-d9454a9950ef/triggerTerminal" inputTerminalId="ae1727ad-203b-451c-ae51-9a922ede6f2b/triggerTerminal"/>
        <con1:connection outputTerminalId="ae1727ad-203b-451c-ae51-9a922ede6f2b/runningTerminal" inputTerminalId="c9fb9024-2a56-4225-a493-d9454a9950ef/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage">
          <con1:chartGroup type="com.eviware.loadui.api.statistics.model.chart.line.LineChartView" title="" groupType="Monitors">
            <con1:attributes>
              <con1:property key="GroupId">4465c739-3025-4a7e-8241-6dd84587a0fb</con1:property>
            </con1:attributes>
          </con1:chartGroup>
        </con1:page>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="ecfe9a56-bbda-4860-a74f-93b11ebd9a77" scenarioId="acf4230b-eb52-4a38-b02f-ebc6a3f4d31b" name="New Scenario" id="b7082d60-59b1-41b6-9401-85820941c759">
      <con:settings/>
    </con:loadUITestScenario>
    <con:loadUIPanelData id="e84368e0-c660-4162-b219-0724b9e6350d">
      <con:panel>Log</con:panel>
      <con:data>
        <con:paramName>column_width@Timestamp</con:paramName>
        <con:paramValue>90</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Timestamp</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@ID</con:paramName>
        <con:paramValue>79</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@ID</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@Test step status</con:paramName>
        <con:paramValue>128</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Test step status</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@TriggerTimestamp</con:paramName>
        <con:paramValue>90</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@TriggerTimestamp</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@TimeTaken</con:paramName>
        <con:paramValue>125</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@TimeTaken</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@_wait_time_</con:paramName>
        <con:paramValue>115</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@_wait_time_</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@Bytes</con:paramName>
        <con:paramValue>54</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Bytes</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@HTTP Status</con:paramName>
        <con:paramValue>97</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@HTTP Status</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@CurrentlyRunning</con:paramName>
        <con:paramValue>82</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@CurrentlyRunning</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@Request</con:paramName>
        <con:paramValue>71</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Request</con:paramName>
        <con:paramValue>false</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@Response</con:paramName>
        <con:paramValue>81</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Response</con:paramName>
        <con:paramValue>false</con:paramValue>
      </con:data>
    </con:loadUIPanelData>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:tags/>
</con:soapui-project>
